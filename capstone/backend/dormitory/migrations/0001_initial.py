# Generated by Django 3.2.7 on 2021-12-01 09:18

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='current_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=105, null=True)),
                ('gender', models.CharField(max_length=105, null=True)),
                ('single_room', models.IntegerField(null=True)),
                ('double_room', models.IntegerField(null=True)),
                ('quad_room', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='floor_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=105, null=True)),
                ('floor', models.CharField(max_length=105, null=True)),
                ('personnel', models.IntegerField(null=True)),
                ('room_count', models.IntegerField(null=True)),
                ('gender', models.CharField(max_length=105, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RC_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='uploads/images')),
                ('name', models.CharField(max_length=105)),
                ('male_count', models.IntegerField(default=0, null=True)),
                ('female_count', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='student_info',
            fields=[
                ('year_semester', models.CharField(max_length=100, null=True)),
                ('student_id', models.CharField(db_column='student_id', max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=100)),
                ('gender', models.CharField(default='', max_length=100)),
                ('RC', models.CharField(max_length=100)),
                ('living_name', models.CharField(default='', max_length=100)),
                ('bed_count', models.CharField(max_length=100, null=True)),
                ('room_number', models.CharField(max_length=100, null=True)),
                ('bed_number', models.CharField(max_length=100, null=True)),
                ('phone_number', models.CharField(max_length=100, null=True)),
                ('team_prof', models.CharField(max_length=100)),
                ('tub_sub', models.CharField(max_length=100, null=True)),
                ('leader_yn', models.CharField(max_length=100, null=True)),
                ('department', models.CharField(max_length=100, null=True)),
                ('grade', models.CharField(max_length=3, null=True)),
                ('semester', models.CharField(max_length=1, null=True)),
                ('care_yn', models.CharField(max_length=1, null=True)),
                ('pre_living_name', models.CharField(max_length=100, null=True)),
                ('pre_room_number', models.CharField(max_length=100, null=True)),
                ('nationality', models.CharField(max_length=100, null=True)),
                ('student_type', models.CharField(max_length=100, null=True)),
                ('now_status', models.CharField(max_length=100, null=True)),
                ('record_change_date', models.DateField(null=True)),
                ('enter_team', models.CharField(max_length=100, null=True)),
                ('date_of_enter', models.DateField(null=True)),
                ('date_of_out', models.DateField(null=True)),
                ('same_room', models.CharField(max_length=100, null=True)),
                ('group_code', models.CharField(max_length=100, null=True)),
                ('payment_status', models.CharField(max_length=100, null=True)),
                ('date_of_payment', models.DateField(null=True)),
                ('change_date_of_payment', models.DateField(null=True)),
                ('cancle_yn', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='team_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_prof', models.CharField(default='', max_length=100)),
                ('name', models.CharField(max_length=105, null=True)),
                ('gender', models.CharField(max_length=105, null=True)),
                ('team_double_room', models.IntegerField(null=True)),
                ('team_quad_room', models.IntegerField(null=True)),
                ('team_single_room', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
